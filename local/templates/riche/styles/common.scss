@import "../base";

:root {

  // region generated colors

  $colorShift:                 10;

  @each $name, $value in $colors {

    --color--#{$name}--light:  #{lighten($value, $colorShift)};
    --color--#{$name}        : #{$value};
    --color--#{$name}--dark:   #{darken($value, $colorShift)};

  }

  // endregion

  @each $name, $value in $colors {
    --color--#{$name}--transparent: #{rgba($value, $opacity / 2)};
  }

  // endregion

  // symbolic colors

  --color--black:              #111111;
  --color--black--transparent: #{rgba(black, $opacity / 2)};

  --color--base:               var(--color--black);

  --color--primary:            var(--color--green);
  --color--secondary:          var(--color--violet);

  --color--background:         var(--color--gray--light);

  // endregion

  --font--base:                "Gordita", sans-serif;

  --padding:                   1rem;
  --padding--2x:               calc(var(--padding) * 2);

  --border-radius:             1rem;
  --border-radius--2x:         calc(var(--border-radius) * 2);

  --transition--ease:          var(--transition--time) ease;

  --transition--time:          0.5s;
  --transition--effect:        ease-in-out;
  --transition--common:        var(--transition--time) var(--transition--effect);
  --transition:                all var(--transition--time) var(--transition--effect);

  --opacity:                   #{$opacity};

  --box-shadow:                0px 2px 4px var(--color--black--transparent);
  --box-shadow--blurry:        0px 6px 18px var(--color--black--transparent);
  --box-shadow--blurry--2x:    0px 8px 24px var(--color--black--transparent);

  @include Tablet {
    --box-shadow--blurry:     0px 6px 18px var(--color--black--transparent);
    --box-shadow--blurry--2x: 0px 8px 28px var(--color--black--transparent);
  }

  --blur:                      blur(3px);
  --blur--2x:                  blur(6px);
}

html {
  font-size:        10pt;
  background-color: var(--color--white);
}

body {
  font-family:             var(--font--base);
  font-weight:             normal;
  font-size:               1rem;

  line-height:             1.25;

  -webkit-font-smoothing:  subpixel-antialiased;
  -moz-osx-font-smoothing: grayscale;

  font-kerning:            auto;
}

h1, h2, h3, h4, h5, h6 {
  font-weight: bold;
  font-size:   1.2rem;
  line-height: 1;

  &:first-child {
    margin-top: 0;
  }

  margin:      0.8em 0;

  > a {
    text-decoration: none;
    white-space:     normal;
  }
}

h5 {
  font-size: 1.4rem;
}

h4 {
  font-size: 1.6rem;
}

h3 {
  font-size: 1.8rem;
}

h2 {
  font-size: 2.2rem;
}

h1 {
  font-size: 2.4rem;
}

p {
  margin: 0;

  & + p {
    margin-top: 0.5em;
  }
}

hr {

}

picture {
  display:    block;
  box-sizing: border-box;

  max-width:  100%;

  img {
    box-sizing: border-box;
    display:    block;
    width:      100%;
  }

}

img {
  display:   block;
  max-width: 100%;
}

video {
  display:    block;
  box-sizing: border-box;

  max-width:  100%;
}

label {

}

strong, b {
  font-weight: bold;
}

address {
  font-style: inherit;
}

a {
  color:           inherit;
  text-decoration: underline;
  white-space:     nowrap;

  transition:      color var(--transition--common);

  &:focus {
    outline: none;
  }

  &:hover {
    color: var(--color--green);
  }

  &[href^="tel"] {
    text-decoration: none;
  }
}

//region controls

select,
textarea,
input {
  display:          inline-block;
  box-sizing:       border-box;

  padding:          0.6em 1em;
  padding-bottom:   0.75em;

  text-decoration:  none;
  line-height:      1.1;

  outline:          none;
  border:           none;

  background-color: var(--color--gray--light);
  border-radius:    var(--border-radius--2x);

  transition:       var(--transition);

  box-shadow:       var(--box-shadow) inset;
}

.button,
input[type=button],
input[type=reset],
input[type=submit],
button {
  display:          inline-block;
  box-sizing:       border-box;

  padding:          0.65em 1em;
  padding-top:      0.4em;

  &.big {
    padding:     1.25em 1.8em;
    padding-top: 1em;
    font-size:   1.2em;
  }

  &.small {
    padding:     0.6em 0.8em;
    padding-top: 0.4em;
  }

  cursor:           pointer;

  border-radius:    var(--border-radius--2x);

  font-weight:      bold;
  line-height:      1.25;

  text-align:       center;
  text-decoration:  none;
  white-space:      nowrap;

  color:            var(--color--base);
  background-color: var(--color--gray--light);

  border:           none;

  transition:       var(--transition);

  box-shadow:       var(--box-shadow);

  &:hover {
    color:            var(--color--green--dark);
    background-color: var(--color--white);
  }

  &.primary {
    background-color: var(--color--green);
    color:            var(--color--white);

    &:hover {
      background-color: var(--color--green--dark);
    }
  }

  &.transparent {
    background: transparent none;
    border:     none;
    box-shadow: none;
    padding:    var(--offset--half);
  }

  &[disabled] {
    cursor:  not-allowed;
    opacity: var(--opacity);
  }

  i[class^="icon"] {
    //margin: 0 0.35em;
    margin-bottom: -0.33em;

    &.only {
      margin-right: 0;
    }
  }

}

.button,
button {
  text-align: center;
  display:    block;

  &.outlined {
    color:            var(--color--white);
    border:           1px solid var(--color--white);
    background-color: var(--color--white--transparent);

    &:hover {
      background-color: var(--color--green--transparent);
    }

  }

  &.rounded {
    padding:       var(--offset--half);
    border-radius: var(--border-radius--2x);
  }

}

[hidden],
.hide,
.hidden {
  display: none !important;
}

select[multiple],
textarea {
  padding:       var(--offset--half);
  border-radius: var(--border-radius);
  width:         100%;
  display:       block;
  user-modify:   none;
}

//endregion

.text {

  &-align {

    &--right {
      text-align: right;
    }

    &--center {
      text-align: center;
    }

  }

  &--nowrap {
    white-space: nowrap;
  }

}

.nowrap {
  white-space: nowrap;
}

ul, ol {
  padding:      0;
  margin:       0;

  padding-left: var(--offset);

  li {
    margin: 0.25em 0;
  }

}

// region icons

[class^="icon-"] {
  font-size:   1.4rem;
  line-height: 1;
}

.button,
button {
  display: inline-flex;

  [class^="icon-"] {

    &:before {
      margin-top: -0.05em;
      display:    block;
    }

  }

}

// endregion

// region img lazyload CSS filter blur

img[loading=lazy] {
  filter: blur(3px);

  &.loaded {
    filter: unset;
  }

  &[data-ll-status] {
    filter: unset;
  }
}

// endregion
